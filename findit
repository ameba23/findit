#!/bin/zsh
# findit -find files using fzy/dmenu and open them.
#
# By default, searches at the current directory.  If arguements are
# supplied, they will be passed to 'locate' instead of current directory
#
# Examples: findit .pdf  --then start typing the name of a pdf located
#                          anywhere on the computer
#           cd books
#           findit       --then start typing the name of a book in this
#                          directory
# --ameba 01/2017
#
# Requires: sed, awk, dmenu, rifle or xdg-open
#           zsh? not sure if theres anything zsh-specific
#
# todo: 
# * make a special version for music using mpd playlist
# * make it possible to open multiple files - with Ctrl-Return dmenu    
#   outputs the item to stdout and continues running (already started
#   fork 'finditmulti')
# * use 'stest' instead of file | grep to test for directory?
# * console-based alternatives to dmenu (i would prefer 'pmenu' but 
#   its nowhere near as fast as dmenu.
#


if [ $# -eq 0 ]
then  
  a=`pwd`
  n=`pwd | sed 's/ /_/g' | sed 's/\// /g' | wc -w`
  p=`echo "$n + 2" | bc `
  #s=`locate $a | cut -f $p- -d '/' | sed 's/ /\\ /g' | dmenu -l 30`

  # make list of files, remove path name up until current dir, remove
  # empty line, pass to dmenu, case insensitive, 30 lines
  #s=`locate $a | cut -f $p- -d '/' | awk 'NF' | dmenu -i -l 30`
  s=`locate $a | cut -f $p- -d '/' | awk 'NF' | fzy -l 30`
else
  #s=`locate $@ | dmenu -i -l 30`
  s=`locate $@ | fzy -l 30`
fi

# if no error caused by user aborting dmenu
if [ $? -eq 0 ]
then
  # check if they chose a directory or a file
  file $s | grep -q 'directory$'
  if [ $? -eq 0 ]
  then
    # change dir then run this script again
    cd $s
    findit
  else
    # open the file using rifle (from 'ranger' file manager) or xdg-open
    #xdg-open $s
    rifle $s
  fi
fi
